@page "/people"
@using BlazorCRUDApp.Client.HttpRepository
@using BlazorCRUDApp.Client.Components
@using BlazorCRUDApp.Shared.Entities.RequestFeatures
@inject HttpClient http
@inject IPersonHttpRepository PersonRepo


<h3>People</h3>

<div>
    <a class="btn btn-success" href="people/create">New Person</a>
</div>

@if (people == null)
{
    <p>Loading...</p>
}
else if (people.Count() == 0)
{
    <p>There are not records in the database</p>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var person in people)
                {
                    <tr>
                        <td>@person.Id</td>
                        <td>@person.Name</td>
                        <td>
                            <a class="btn btn-success" href="people/edit/@person.Id">Edit</a>
                            <a class="btn btn-danger" href="people/delete/@person.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
}

@code {
    //Person[] people { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    await LoadPeople();
    //}

    //async Task LoadPeople()
    //{
    //    people = await http.GetFromJsonAsync<Person[]>("api/people");
    //}


    public List<Person> people { get; set; } = new List<Person>();
    public MetaData MetaData { get; set; } = new MetaData();
    private PersonParameters _personParameters = new PersonParameters();

    protected async override Task OnInitializedAsync()
    {
        await GetPeople();
    }

    private async Task SelectedPage(int page)
    {
        _personParameters.PageNumber = page;
        await GetPeople();
    }

    private async Task GetPeople()
    {
        var pagingResponse = await PersonRepo.GetPeople(_personParameters);
        people = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
}
